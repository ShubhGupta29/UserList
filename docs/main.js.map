{"version":3,"sources":["./src/app/Shared/authorisation-error/authorisation-error.component.ts","./src/app/Shared/authorisation-error/authorisation-error.component.html","./src/app/UserLandingPage/user-landing-component/login-page-component/login-page.service.ts","./src/environments/environment.ts","./src/app/UserLandingPage/webapp-routing.module.ts","./src/app/user-home/user-home.service.ts","./src/app/Shared/Modules/app-material/app-material.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/user-home/user-home.component.ts","./src/app/user-home/user-home.component.html","./src/app/app.module.ts","./src/app/UserLandingPage/webapp.module.ts","./src/app/user-home/list-view/list-view.component.ts","./src/app/user-home/list-view/list-view.component.html","./src/app/UserLandingPage/user-landing-component/user-landing-component.component.ts","./src/app/UserLandingPage/user-landing-component/user-landing-component.component.html","./src/app/user-home/single-view/single-view.component.ts","./src/app/user-home/single-view/single-view.component.html","./src/app/UserLandingPage/user-landing-component/login-page-component/login-page-component.component.ts","./src/app/UserLandingPage/user-landing-component/login-page-component/login-page-component.component.html","./src/app/UserLandingPage/user-landing-component/register/register.component.ts","./src/app/UserLandingPage/user-landing-component/register/register.component.html","./src/app/auth.guard.ts","./src/app/app-routing.module.ts","./src/app/UserLandingPage/user-landing-component/register/register.service.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-authorisation-error',\n  templateUrl: './authorisation-error.component.html',\n  styleUrls: ['./authorisation-error.component.css']\n})\nexport class AuthorisationErrorComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>authorisation-error works!</p>\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders} from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { LoginRegisterRequest, LoginResponse } from 'src/app/Shared/Models/LoginRegister';\nimport { environment } from 'src/environments/environment';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginPageService {\n\n  httpOptions= {headers : new HttpHeaders({ 'Content-Type' : 'application/json'})};\n  constructor(private http:HttpClient, private router : Router) { }\n\n  login(loginRegisterRequest:LoginRegisterRequest): Observable<LoginResponse>{\n    const url=environment.postLogin;\n    return this.http.post<LoginResponse>(url,loginRegisterRequest, this.httpOptions).pipe(map(\n      res=>{\n        return res;\n      }\n    ));\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nconst HOSTNAME: string = \"reqres.in\";\nconst PORT_NUMBER: number=0;\nconst API: string = \"/api/\";\n\nexport const environment = {\n  production: true,\n  getListUsers: \"https://\" + HOSTNAME + API + \"users?page=\",\n  getSingleUser: \"https://\" + HOSTNAME + API + \"users/\",\n  postLogin: \"https://\" + HOSTNAME + API + \"login\",\n  postRegister: \"https://\" + HOSTNAME + API + \"register\",\n\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AuthGuard } from '../auth.guard';\nimport { ListViewComponent } from '../user-home/list-view/list-view.component';\nimport { SingleViewComponent } from '../user-home/single-view/single-view.component';\nimport { UserHomeComponent } from '../user-home/user-home.component';\nimport { LoginPageComponentComponent } from './user-landing-component/login-page-component/login-page-component.component';\nimport { RegisterComponent } from './user-landing-component/register/register.component';\nimport { UserLandingComponentComponent } from './user-landing-component/user-landing-component.component';\n\nconst routes: Routes = [\n  {path: 'webapp', component:UserLandingComponentComponent, children: [\n    {path: '', redirectTo: 'login', pathMatch: 'full' },\n    {path: 'login', component: LoginPageComponentComponent},\n    {path: 'register', component: RegisterComponent}\n  ]},\n  { path: 'home', component: UserHomeComponent, canActivate: [AuthGuard], children: [\n    {path:'', redirectTo: 'listview', pathMatch:'full'},\n    {path: 'listview', component: ListViewComponent},\n    {path: 'singleview', component: SingleViewComponent}\n  ]\n  },\n  {path: '', redirectTo: 'webapp', pathMatch: 'full'}\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class WebappRoutingModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders} from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { LoginRegisterRequest, LoginResponse } from 'src/app/Shared/Models/LoginRegister';\nimport { environment } from 'src/environments/environment';\nimport { map } from 'rxjs/operators';\nimport { List, Single } from '../Shared/Models/HomeModel';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserHomeService {\n  httpOptions= {headers : new HttpHeaders({ 'Content-Type' : 'application/json'})};\n  constructor(private http:HttpClient, private router : Router) { }\n\n  getListUsers(num:number): Observable<List>{\n    const url=environment.getListUsers+num;\n    return this.http.get<List>(url, this.httpOptions).pipe(map(\n      res=>{\n        return res;\n      }\n    ));\n  }\n\n  getSingleUser(num:number): Observable<Single>{\n    const url=environment.getSingleUser+num;\n    return this.http.get<Single>(url, this.httpOptions).pipe(map(\n      res=>{\n        return res;\n      }\n    ));\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatButtonModule} from '@angular/material/button';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatChipsModule } from '@angular/material/chips';\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    MatCardModule,\n    MatButtonModule,\n    MatMenuModule,\n    MatToolbarModule,\n    MatIconModule,\n    MatChipsModule,\n  ],\n  exports: [\n    CommonModule,\n    MatCardModule,\n    MatButtonModule,\n    MatMenuModule,\n    MatToolbarModule,\n    MatIconModule,\n    MatChipsModule,\n  ]\n})\nexport class AppMaterialModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'WebApp';\n}\n","<div class=\"container-fluid\">\n  <router-outlet></router-outlet>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-user-home',\n  templateUrl: './user-home.component.html',\n  styleUrls: ['./user-home.component.css']\n})\nexport class UserHomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<nav class=\"navbar navbar-expand-md bg-dark navbar-dark nav-fill w-100\">\n    <a class=\"navbar-brand\" routerLink=\"../\" routerLinkActive=\"active\"> Webapp</a>\n</nav>\n\n<mat-chip-list style=\"padding-top: 46px;\">\n    <mat-chip>\n        <div class=\"col-6\" style=\"position: relative;display: inline;padding: 24px;\">\n            <a routerLink=\"../home/listview\" style=\"position: relative;display: inline;\">List View</a>\n        </div>\n    </mat-chip>\n    <mat-chip>\n        <div class=\"col-6\" style=\"position: relative;display: inline;padding: 24px;\">\n            <a routerLink=\"../home/singleview\" style=\"position: relative;display: inline;\">Single View</a>\n        </div>\n    </mat-chip>\n</mat-chip-list>\n\n\n<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { AuthorisationErrorComponent } from './Shared/authorisation-error/authorisation-error.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { AuthGuard } from './auth.guard';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { WebappModule } from './UserLandingPage/webapp.module';\nimport { ListViewComponent } from './user-home/list-view/list-view.component';\nimport { SingleViewComponent } from './user-home/single-view/single-view.component';\n// import { MatInputModule } from '@angular/material';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    AuthorisationErrorComponent,\n\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    ReactiveFormsModule,\n    WebappModule\n  ],\n  providers: [AuthGuard],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AppMaterialModule } from '../Shared/Modules/app-material/app-material.module';\n// import { NgbModule } from '@ng';\n\nimport { WebappRoutingModule } from './webapp-routing.module';\nimport { UserLandingComponentComponent } from './user-landing-component/user-landing-component.component';\nimport { LoginPageComponentComponent } from './user-landing-component/login-page-component/login-page-component.component';\nimport { RegisterComponent } from './user-landing-component/register/register.component';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { LoginPageService } from './user-landing-component/login-page-component/login-page.service';\nimport { RegisterService } from './user-landing-component/register/register.service';\nimport { UserHomeService } from '../user-home/user-home.service';\nimport { ListViewComponent } from '../user-home/list-view/list-view.component';\nimport { SingleViewComponent } from '../user-home/single-view/single-view.component';\nimport { UserHomeComponent } from '../user-home/user-home.component';\n\n// import { MatInputModule } from '@angular/material';\n\n\n@NgModule({\n  declarations: [UserLandingComponentComponent, LoginPageComponentComponent, RegisterComponent,    ListViewComponent,\n    SingleViewComponent,UserHomeComponent],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n    CommonModule,\n    WebappRoutingModule,\n    AppMaterialModule\n  ],\n  providers: [\n    LoginPageService,\n    RegisterService,\n    UserHomeService\n  ],\n  bootstrap:[]\n})\nexport class WebappModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { List } from 'src/app/Shared/Models/HomeModel';\nimport { UserHomeService } from '../user-home.service';\n\n@Component({\n  selector: 'app-list-view',\n  templateUrl: './list-view.component.html',\n  styleUrls: ['./list-view.component.css']\n})\nexport class ListViewComponent implements OnInit {\n\n  constructor(private userHome:UserHomeService) { }\n\n  ngOnInit(): void {\n  }\n\n  \n  num:number;\n  cardShow:boolean=true;\n  list:List=null;\n  value(){\n    if(this.num!=0){\n      this.cardShow=false;\n    }\n    this.userHome.getListUsers(this.num).subscribe(\n      res=>{\n        this.list=res;\n      },\n      error=>{\n        alert(error.error.error);\n        \n      }\n    )\n  }\n\n  reset(){\n    this.cardShow=true;\n    this.num=0;\n  }\n}\n","    <div *ngIf=\"cardShow\"  style=\"padding: 16px 0 0 0;\">\n    <mat-card class=\"example-card\">\n\n        <mat-card-title>Enter a number to view list of Users</mat-card-title>\n        <mat-card-content>\n            <input type=\"number\" placeholder=\"Enter a number\" min=\"0\" name=\"num\" [(ngModel)]=\"num\">\n            <div style=\"padding: 16px 0 0 0;\"><button mat-raised-button color=\"primary\" (click)=\"value()\" >Submit</button></div>\n            \n        </mat-card-content>\n    </mat-card>\n    </div>\n\n    <div style=\"padding: 16px 0 0 0;\">\n    <button mat-raised-button color=\"primary\" (click)=\"reset()\" >Reset</button>\n    </div>\n\n\n    <div *ngIf=\"list!=null && !cardShow\">\n        <div class=\"row\">\n            <ul style=\"list-style-type:none;\">\n                <li class=\"col-4\" *ngFor=\"let i of list.data\" style=\"padding: 26px;\">\n                    <mat-card class=\"example-card\">\n\n                        <mat-card-title>{{i.first_name}}&nbsp;{{i.last_name}}</mat-card-title>\n                        <mat-card-subtitle>{{i.email}}</mat-card-subtitle>\n                        <mat-card-content>\n                            <img src=\"{{i.avatar}}\" alt=\"\" srcset=\"\">\n                        </mat-card-content>\n                        <mat-divider inset></mat-divider>\n                        <mat-card-footer>\n                            ID : {{i.id}}\n                        </mat-card-footer>\n                    </mat-card>\n                </li>\n            </ul>\n        </div>\n    </div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-user-landing-component',\n  templateUrl: './user-landing-component.component.html',\n  styleUrls: ['./user-landing-component.component.css']\n})\nexport class UserLandingComponentComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<!-- <div class=\"row\">\n    <a routerLink=\"../\">Webapp</a>\n</div> -->\n<div class=\"row\">\n    <nav class=\"navbar navbar-expand-md bg-dark navbar-dark nav-fill w-100\">\n        <a class=\"navbar-brand\" routerLink=\"../\" routerLinkActive=\"active\"> Webapp</a>\n        <!-- <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#collapsibleNavbar\">\n            <span class=\"navbar-toggler-icon\"></span>\n        </button>\n        <div class=\"collapse navbar-collapse\" id=\"collapsibleNavbar\">\n            <ul class=\"navbar-nav ml-auto\">\n               <li class=\"nav-item\">\n                    <a routerLink=\"/seller\" routerLinkActive=\"active\" class=\"nav-link\">Sell Your Products</a>\n                </li>\n            </ul>\n        </div> -->\n    </nav>\n</div>\n<div>\n    <router-outlet></router-outlet>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { List, Single } from 'src/app/Shared/Models/HomeModel';\nimport { UserHomeService } from '../user-home.service';\n\n@Component({\n  selector: 'app-single-view',\n  templateUrl: './single-view.component.html',\n  styleUrls: ['./single-view.component.css']\n})\nexport class SingleViewComponent implements OnInit {\n\n  constructor(private userHome:UserHomeService) { }\n\n  ngOnInit(): void {\n  }\n\n  \n  num:number=0;\n  single:Single=null;\n  showCard:boolean=true;\n  value(){\n    this.userHome.getSingleUser(this.num).subscribe(\n      res=>{\n        this.single=res;\n        this.showCard=false;\n      },\n      error=>{\n        alert(error.error.error);\n      }\n    )\n  }\n\n  reset(){\n    this.showCard=true;\n    this.single=null;\n    this.num=0;\n  }\n}\n","\n<div   style=\"padding: 16px 0 0 0;\">\n    <mat-card class=\"example-card\">\n\n        <mat-card-title>Enter a number to view Single User with respect to ID</mat-card-title>\n        <mat-card-content>\n            <input type=\"number\" placeholder=\"Enter a number\" min=\"0\" name=\"num\" [(ngModel)]=\"num\">\n            <div style=\"padding: 16px 0 0 0;\"><button mat-raised-button color=\"primary\" (click)=\"value()\" >Submit</button></div>\n            \n        </mat-card-content>\n    </mat-card>\n    </div>\n\n<div *ngIf=\"single!=null && !showCard\">\n        <mat-card class=\"example-card\">\n            \n            <mat-card-title>{{single.data.first_name}}&nbsp;{{single.data.last_name}}</mat-card-title>\n            <mat-card-subtitle style=\"color: #2ecc71\">{{single.data.email}}</mat-card-subtitle>\n            <mat-card-content>\n                <img src=\"{{single.data.avatar}}\" alt=\"\" srcset=\"\">\n            </mat-card-content>\n            <mat-divider inset></mat-divider>\n            <mat-card-footer>\n                ID : {{single.data.id}}\n            </mat-card-footer>\n          </mat-card>\n</div>\n\n<div style=\"padding: 16px 0 0 0;\">\n    <button mat-raised-button color=\"primary\" (click)=\"reset()\" >Reset</button>\n    </div>\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { loginError, LoginRegisterRequest, LoginResponse } from 'src/app/Shared/Models/LoginRegister';\nimport { LoginPageService } from './login-page.service';\n\n@Component({\n  selector: 'app-login-page-component',\n  templateUrl: './login-page-component.component.html',\n  styleUrls: ['./login-page-component.component.css']\n})\nexport class LoginPageComponentComponent implements OnInit {\n\n  loginRegisterRequest:LoginRegisterRequest={\n    \"email\":\"\",\n    \"password\":\"\"\n  };\n  loginForm: FormGroup;\n\n  constructor( private fb : FormBuilder, private router : Router, private loginPageService:LoginPageService) { }\n\n  ngOnInit(): void {\n  }\n\n  tryLogin:boolean=false;\n  errorMessage:loginError={\"error\":\"\"};\n  successMessage: string=\"\";\n  loginResponse:LoginResponse;\n  email:string=\"\";\n  password:string=\"\";\n  login(){\n    this.loginRegisterRequest={\n      \"email\":this.email,\n      \"password\":this.password\n    };\n    this.loginPageService.login(this.loginRegisterRequest).subscribe(\n      res=>{\n        if(res!=null){\n          this.loginResponse=res;\n          sessionStorage.setItem(\"user\", JSON.stringify(this.loginRegisterRequest));\n          this.tryLogin=false;\n          alert(\"Logged in Successfully with token \"+this.loginResponse.token);\n          this.router.navigate[('../home/login')];\n        }\n      },\n      error=>{\n        this.errorMessage=error;\n        alert(error.error.error);\n      }\n    )\n  }\n\n}\n","<form class=\"box\" action=\"Prac.html\" method=\"POST\">\n    <h1>Login</h1>\n    <input type=\"text\" name=\"Username\" placeholder=\"Username\" [(ngModel)]=\"email\">\n    <input type=\"password\" name=\"Password\" placeholder=\"Password\" [(ngModel)]=\"password\">\n    <input type=\"submit\" value=\"Login\" name=\"\" (click)=\"login()\">\n    <div class=\"text-info\">Are you a new user? <a routerLink=\"../register\">Sign up</a></div>\n</form>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { LoginRegisterRequest, RegisterResponse } from 'src/app/Shared/Models/LoginRegister';\nimport { RegisterService } from './register.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  loginRegisterRequest: LoginRegisterRequest = {\n    \"email\": \"\",\n    \"password\": \"\"\n  };\n  email: string = \"\";\n  password: string = \"\";\n  registerRespone:RegisterResponse;\n  \n\n  constructor(private registerService: RegisterService,private router: Router) { }\n\n  ngOnInit(): void {\n  }\n\n  register() {\n    this.loginRegisterRequest = {\n      \"email\": this.email,\n      \"password\": this.password\n    }\n    this.registerService.register(this.loginRegisterRequest).subscribe(\n      res=>{\n        console.log(\"res\",res);\n        if(res!=null){\n          this.registerRespone=res;\n          alert(\"Logged in Successfully with token \"+this.registerRespone.token+ \" with id \"+this.registerRespone.id);\n          this.router.navigate[('/webapp/login')];\n        }\n      },\n      error=>{\n        alert(error.error.error);\n      }\n    )\n  }\n\n}\n","<form class=\"box\" action=\"Prac.html\" method=\"POST\">\n    <h1>Please Enter new Details</h1>\n    <input type=\"text\" name=\"Username\" placeholder=\"Username\" [(ngModel)]=\"email\">\n    <input type=\"password\" name=\"Password\" placeholder=\"Password\" [(ngModel)]=\"password\">\n    <input type=\"submit\" value=\"Register\" name=\"\" (click)=\"register()\">\n</form>","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\n  constructor(private router:Router){}\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n      let userType=sessionStorage.getItem(\"user\");\n      let toRet: boolean=false;\n      if(userType!=null){\n        toRet=true;\n      }\n      if(toRet){\n        return toRet;\n      }\n      else{\n        this.router.navigate([\"error\"]);\n        return toRet;\n      } \n  }\n  \n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AuthorisationErrorComponent } from './Shared/authorisation-error/authorisation-error.component';\n\nconst routes: Routes = [\n  {path:'error',component:AuthorisationErrorComponent},\n  {path:'',redirectTo:'/webapp/login',pathMatch:'full'}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders} from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { LoginRegisterRequest, LoginResponse, RegisterResponse } from 'src/app/Shared/Models/LoginRegister';\nimport { environment } from 'src/environments/environment';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RegisterService {\n\n  httpOptions= {headers : new HttpHeaders({ 'Content-Type' : 'application/json'})};\n  constructor(private http:HttpClient, private router : Router) { }\n\n  register(loginRegisterRequest:LoginRegisterRequest): Observable<RegisterResponse>{\n    const url=environment.postRegister;\n    return this.http.post<RegisterResponse>(url,loginRegisterRequest, this.httpOptions).pipe(map(\n      res=>{\n        return res;\n      }\n    ));\n  }\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}